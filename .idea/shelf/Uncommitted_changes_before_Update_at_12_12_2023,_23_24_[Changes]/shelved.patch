Index: src/main/java/com/example/ice/BattleSimController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice;\n\nimport java.io.IOException;\nimport java.util.Random;\nimport javafx.event.ActionEvent;\nimport javafx.application.Platform;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\n\npublic class BattleSimController {\n    private final Stage userChoices = new Stage();\n    private final MenuController menuController = new MenuController();\n    private final User player = menuController.getCurrentUser();\n    private final User NPC = menuController.getNPC();\n    private User currentPlayer = player;\n    private User enemyPlayer = NPC;\n\n\n    private void showErrorDialog(String title, String content) {\n        Alert alert = new Alert(Alert.AlertType.ERROR);\n        alert.setTitle(title);\n        alert.setHeaderText(null);\n        alert.setContentText(content);\n        alert.showAndWait();\n    }\n\n    // Switches user between current and enemy player.\n    private void switchUser() {\n        if (currentPlayer.equals(player)) {\n            currentPlayer = NPC;\n        } else {\n            currentPlayer = player;\n        }\n\n        // TODO: Fix logic with enemyPlayer\n    }\n\n\n    // Calls a random ability if the current player is the NPC.\n    private void ChooseMove(int pick) {\n\n       int methodNumber;\n\n        if (currentPlayer.equals(NPC)) {\n            Random random = new Random();\n            methodNumber = random.nextInt(4) + 1;\n            } else {\n            methodNumber = pick;\n        }\n\n            switch (methodNumber) {\n                case 1:\n                    move1(currentPlayer.getCurrentDatamon(), enemyPlayer.getCurrentDatamon());\n                    break;\n\n                case 2:\n                    move2(currentPlayer.getCurrentDatamon(), enemyPlayer.getCurrentDatamon());\n                    break;\n\n                case 3:\n                    move3(currentPlayer.getCurrentDatamon(), enemyPlayer.getCurrentDatamon());\n                    break;\n\n                case 4:\n                    move4(currentPlayer.getCurrentDatamon(), enemyPlayer.getCurrentDatamon());\n                    break;\n\n                default:\n                    System.out.println(\"Something went wrong.\");\n        }\n    }\n\n    // Checks if the enemy players datamon is dead.\n    private void checkIfDead() {\n        if (!enemyPlayer.getDatamons().isEmpty() && enemyPlayer.getCurrentDatamon().getHP() <= 0) {\n            enemyPlayer.removeDatamon(enemyPlayer.getCurrentDatamon());\n            enemyPlayer.getDatamons().get(0);\n        }\n    }\n\n\n\n    private void chooseMon() {\n        //TODO: Add måde at vælge på.\n        //Generer buttons ud fra list.size() med navne på objekter.\n    }\n\n\n    // Checks if there's a winner.\n    private Boolean checkIfWin() {\n        if (enemyPlayer.getDatamons().size() <= 0) {\n            System.out.println(\"Winner found test\");\n            return true;\n        }\n        return false;\n    }\n\n\n\n    public void Fight() {\n        if (checkIfWin()) {\n            showErrorDialog(\"Winner found\", currentPlayer.getUsername() + \"won!\");\n\n            /*\n            Platform.runLater(() -> {\n                try {\n\n\n                    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"Selector.fxml\"));\n                    Parent root = loader.load();\n                    userChoices.setScene(new Scene(root));;\n                    userChoices.show();\n\n                } catch (IOException e) {\n                    showErrorDialog(\"Error1\", \"An error occurred while loading the next screen.\");\n                }\n            });\n\n             */\n\n        }\n\n        checkIfDead();\n        switchUser();\n\n    }\n\n\n\n\n    public void move1(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move1(defender));\n    }\n    public void move2(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move2(defender));\n    }\n    public void move3(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move3(defender));\n    }\n    public void move4(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move4(defender));\n    }\n\n    @FXML\n    public void move1Button(ActionEvent e){\n        ChooseMove(1);\n        Fight();\n    }\n\n    @FXML\n    public void move2Button(ActionEvent e){\n        ChooseMove(2);\n        Fight();\n    }\n\n    @FXML\n    public void move3Button(ActionEvent e){\n        ChooseMove(3);\n        Fight();\n    }\n\n    @FXML\n    public void move4Button(ActionEvent e){\n        ChooseMove(4);\n        Fight();\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/BattleSimController.java b/src/main/java/com/example/ice/BattleSimController.java
--- a/src/main/java/com/example/ice/BattleSimController.java	(revision d5da7427965776ff07ba9f493e08393cd0503532)
+++ b/src/main/java/com/example/ice/BattleSimController.java	(date 1702419816279)
@@ -14,8 +14,8 @@
 public class BattleSimController {
     private final Stage userChoices = new Stage();
     private final MenuController menuController = new MenuController();
-    private final User player = menuController.getCurrentUser();
-    private final User NPC = menuController.getNPC();
+    private User player = menuController.getCurrentUser();
+    private User NPC = menuController.getNPC();
     private User currentPlayer = player;
     private User enemyPlayer = NPC;
 
