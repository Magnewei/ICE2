Index: src/main/java/com/example/ice/Datamons/RouvisMor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice.Datamons;\n\nimport com.example.ice.Datamon;\n\npublic class RouvisMor implements Datamon {\n\n    private String name;\n    private int hp;\n    private String CreatureType;\n\n    private String move1Name = \"Teen Seduction\";\n    private String move2Name = \"Bitch slap\";\n    private String move3Name = \"Blowing kiss\";\n    private String move4Name = \"Life Advice\";\n\n\n    public RouvisMor(){\n        this.name = \"Henriette\";\n        this.hp = 300;\n        this.CreatureType = \"Milf\";\n    }\n\n\n    @Override\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public int getHP() {\n        return hp;\n    }\n\n    @Override\n    public void setHP(int hp) {\n        this.hp = hp;\n    }\n\n\n    @Override\n    public String getCreatureType() {\n        return CreatureType;\n    }\n\n    @Override\n    public String introduction() {\n        return \"A hot milf appears in the wild. Her soul is kind, and her smile light up the world\";\n    }\n\n    public int move1(Datamon target){\n        String name = \"Teen Seduction\";\n        int damage = 7;\n        if(\"Ginger\".equals(target.getCreatureType())){\n            damage *= 2;\n        }\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move2(Datamon target){\n        String name = \"Bitch Slap\";\n        int damage = 6;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move3(Datamon target){\n        String name = \"Blowing kisses\";\n        int damage = 1;\n        if(\"Ginger\".equals(target.getCreatureType())){\n            damage = 100;\n        }\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n\n    }\n\n    public int move4(Datamon target){\n        String name =\"Life advice\";\n        int damage = 1;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    @Override\n    public String getMove1Name() {\n        return move1Name;\n    }\n\n    @Override\n    public String getMove2Name() {\n        return move2Name;\n    }\n\n    @Override\n    public String getMove3Name() {\n        return move3Name;\n    }\n\n    @Override\n    public String getMove4Name() {\n        return move4Name;\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/Datamons/RouvisMor.java b/src/main/java/com/example/ice/Datamons/RouvisMor.java
--- a/src/main/java/com/example/ice/Datamons/RouvisMor.java	
+++ b/src/main/java/com/example/ice/Datamons/RouvisMor.java	
@@ -2,6 +2,8 @@
 
 import com.example.ice.Datamon;
 
+import java.util.Objects;
+
 public class RouvisMor implements Datamon {
 
     private String name;
@@ -86,6 +88,16 @@
         return damage;
     }
 
+    @Override
+    public boolean equals(Object o) {
+        return this == o;
+    }
+
+    @Override
+    public int hashCode() {
+        return System.identityHashCode(this);
+    }
+
     @Override
     public String getMove1Name() {
         return move1Name;
Index: src/main/java/com/example/ice/Datamons/Tess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice.Datamons;\n\nimport com.example.ice.Datamon;\n\npublic class Tess implements Datamon {\n\n    private String name;\n    private int hp;\n    private String CreatureType;\n    private boolean studerendePræsenterer;\n\n    private String move1Name = \"Roast\";\n    private String move2Name = \"Stil spørgsmål til studerendes kode\";\n    private String move3Name = \"Undervis på Zoom\";\n    private String move4Name = \"Få studerende til at præsentere\";\n\n    public Tess(){\n        this.name = \"Tess\";\n        this.hp = 300;\n        this.CreatureType = \"Boss\";\n    }\n\n\n    @Override\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public int getHP() {\n        return hp;\n    }\n\n    @Override\n    public void setHP(int hp) {\n        this.hp = hp;\n    }\n\n\n    @Override\n    public String getCreatureType() {\n        return CreatureType;\n    }\n\n    @Override\n    public String introduction() {\n        return  \"\";\n    }\n\n\n    public int move1(Datamon target){\n        String name =\"Roast\";\n        int damage = 7;\n        if (target.getCreatureType().equals(\"ElsketLøve\")){\n            damage *= 100;\n        }\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move2(Datamon target){\n        String name = \"Stil spørgsmål til studerendes kode\";\n        int damage = 12;\n        if(studerendePræsenterer){\n            damage *= 2;\n        }\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move3(Datamon target){\n        String name = \"Undervis på Zoom\";\n        int damage = 2;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move4(Datamon target){\n        String name = \"Få studerende til at præsentere\";\n        int damage = 3;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    @Override\n    public String getMove1Name() {\n        return move1Name;\n    }\n\n    @Override\n    public String getMove2Name() {\n        return move2Name;\n    }\n\n    @Override\n    public String getMove3Name() {\n        return move3Name;\n    }\n\n    @Override\n    public String getMove4Name() {\n        return move4Name;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/Datamons/Tess.java b/src/main/java/com/example/ice/Datamons/Tess.java
--- a/src/main/java/com/example/ice/Datamons/Tess.java	
+++ b/src/main/java/com/example/ice/Datamons/Tess.java	
@@ -2,6 +2,8 @@
 
 import com.example.ice.Datamon;
 
+import java.util.Objects;
+
 public class Tess implements Datamon {
 
     private String name;
@@ -86,6 +88,16 @@
         return damage;
     }
 
+    @Override
+    public boolean equals(Object o) {
+        return this == o;
+    }
+
+    @Override
+    public int hashCode() {
+        return System.identityHashCode(this);
+    }
+
     @Override
     public String getMove1Name() {
         return move1Name;
Index: src/main/java/com/example/ice/Datamons/Tobias.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice.Datamons;\n\nimport com.example.ice.Datamon;\n\npublic class Tobias implements Datamon {\n    private String name;\n    private int hp;\n    private String CreatureType;\n\n    private String move1Name = \"Byg Reol 1\";\n    private String move2Name = \"Byg Reol 2\";\n    private String move3Name = \"Byg Reol 3\";\n    private String move4Name = \"Byg Reol 4\";\n\n\n    public Tobias() {\n        this.name = \"Tobias\";\n        this.hp = 280;\n        this.CreatureType = \"YapMaster\";\n    }\n\n    @Override\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public int getHP() {\n        return hp;\n    }\n\n    @Override\n    public void setHP(int hp) {\n        this.hp = hp;\n    }\n\n\n    @Override\n    public String getCreatureType() {\n        return CreatureType;\n    }\n\n\n    @Override\n    public String introduction() {\n        return \"A giant monster apears from the dista..... oh wait its just tiny jonas\";\n    }\n\n    public int move1(Datamon target){\n         String name =\"Byg reol 1\";\n         int damage = 0;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n         return damage;\n    }\n\n    public int move2(Datamon target){\n        String name =\"Byg reol 2\";\n        int damage = 0;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move3(Datamon target){\n        String name =\"Byg reol 3\";\n        int damage = 0;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    public int move4(Datamon target){\n        String name =\"Byg reol 4\";\n        int damage = 0;\n        System.out.println(\"Angreb: \" + name + \" Dealt : \" + damage + \" To \" + target.getName());\n        System.out.println(target.getName() + \" hp is now: \" + (target.getHP()-damage));\n        return damage;\n    }\n\n    @Override\n    public String getMove1Name() {\n        return move1Name;\n    }\n\n    @Override\n    public String getMove2Name() {\n        return move2Name;\n    }\n\n    @Override\n    public String getMove3Name() {\n        return move3Name;\n    }\n\n    @Override\n    public String getMove4Name() {\n        return move4Name;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/Datamons/Tobias.java b/src/main/java/com/example/ice/Datamons/Tobias.java
--- a/src/main/java/com/example/ice/Datamons/Tobias.java	
+++ b/src/main/java/com/example/ice/Datamons/Tobias.java	
@@ -2,6 +2,8 @@
 
 import com.example.ice.Datamon;
 
+import java.util.Objects;
+
 public class Tobias implements Datamon {
     private String name;
     private int hp;
@@ -78,6 +80,16 @@
         return damage;
     }
 
+    @Override
+    public boolean equals(Object o) {
+        return this == o;
+    }
+
+    @Override
+    public int hashCode() {
+        return System.identityHashCode(this);
+    }
+
     @Override
     public String getMove1Name() {
         return move1Name;
Index: src/main/java/com/example/ice/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\n\n\npublic class User {\n    private String username;\n    private String password;\n    private int xp;\n    private List<Datamon> datamons = new ArrayList<>();\n\n    private Datamon currentDatamon;\n\n    public User(String username, String password) {\n        this.username = username;\n        this.password = password;\n\n    }\n\n    public void setCurrentDatamon(int x) {\n        this.currentDatamon = datamons.get(x);\n    }\n\n    public void setCurrentDatamon(Datamon datamon) {\n        this.currentDatamon = datamon;\n    }\n\n\n    public User() {\n    }\n\n    public List<Datamon> getDatamons() {\n        return datamons;\n    }\n\n    public Datamon getCurrentDatamon() {\n        if (datamons != null && !datamons.isEmpty()) {\n            return currentDatamon;\n        }\n        return setCurrentDatamon();\n    }\n\n    public Datamon setCurrentDatamon() {\n        if (datamons != null && !datamons.isEmpty()) {\n            Random random = new Random();\n            return datamons.get(random.nextInt(getDatamons().size()));\n        }\n        return currentDatamon;\n    }\n\n\n    public void addDatamon(Datamon mon) {\n        datamons.add(mon);\n    }\n\n    public void removeDatamon(Datamon mon) {\n        datamons.remove(mon);\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/User.java b/src/main/java/com/example/ice/User.java
--- a/src/main/java/com/example/ice/User.java	
+++ b/src/main/java/com/example/ice/User.java	
@@ -51,12 +51,14 @@
     }
 
 
-    public void addDatamon(Datamon mon) {
-        datamons.add(mon);
+    public void addDatamon(Datamon datamon) {
+        datamons.add(datamon);
     }
 
-    public void removeDatamon(Datamon mon) {
-        datamons.remove(mon);
+    public void removeDatamon(Datamon datamon) {
+        System.out.println("Attempting to remove Datamon: " + datamon);
+        datamons.remove(datamon);
+        System.out.println("Remaining Datamons: " + datamons);
     }
 
     public String getUsername() {
Index: src/main/java/com/example/ice/BattleSim.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ice;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.concurrent.atomic.AtomicBoolean;\n\nimport javafx.event.ActionEvent;\nimport javafx.application.Platform;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Alert;\nimport javafx.stage.Stage;\n\npublic class BattleSim {\n    private User currentPlayer;\n    private User enemyPlayer;\n    private User player;\n    private User NPC;\n    private final Random random = new Random();\n    private Datamon enemyDatamon;\n    private Datamon playerDatamon;\n\n    public void setup(User player, User NPC) {\n        this.player = player;\n        this.NPC = NPC;\n\n        currentPlayer = player;\n        enemyPlayer = NPC;\n\n        enemyDatamon = enemyPlayer.getDatamons().get(0);\n        playerDatamon = currentPlayer.getDatamons().get(0);\n\n}\n\n\n\n    // Checks if Datamon is dead.\n    private void checkIfDead() {\n        if (enemyDatamon.getHP() <= 0) {\n            enemyPlayer.removeDatamon(enemyDatamon);\n            if (!enemyPlayer.getDatamons().isEmpty() ) {\n                enemyDatamon = enemyPlayer.getDatamons().get(0);\n            }\n\n        }else if(playerDatamon.getHP() <= 0){\n            currentPlayer.removeDatamon(playerDatamon);\n            if(!currentPlayer.getDatamons().isEmpty()){\n                playerDatamon = currentPlayer.getDatamons().get(0);\n            }\n        }\n    }\n\n    // Checks winner by parsing NPC and Player Datamon ArrayLists.\n    private Boolean checkIfWin() {\n        if (player.getDatamons().isEmpty()) {\n            showErrorDialog(\"Winner found \", NPC.getUsername() + \" won!\");\n            return true;\n\n        } else if (NPC.getDatamons().isEmpty()) {\n            showErrorDialog(\"Winner found \", player.getUsername() + \" won!\");\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n\n    // Method is called on buttons. Fight() checks winner and prompts if winner is found, checks dead datamon\n    // Prompting if winner is found through method calls.\n    // Finally calls Moves from button if player turn or from random number on AI turn.\n    public void Fight(int pick) {\n        if (enemyPlayer != null && currentPlayer != null) {\n\n            // Used for debugging player objects and datamon arraylists.\n            System.out.println(\"Player datamons\" + player.getDatamons().toString() );\n            System.out.println(\"NPC datamons\" + NPC.getDatamons());\n            System.out.println(\"CurrentPlayer is: \" + currentPlayer.getUsername());\n            System.out.println(\"CurrentPlayer is: \" + enemyPlayer.getUsername());\n\n\n            if (!checkIfWin()) {\n                checkIfDead();\n\n                // Execute player move\n                if (currentPlayer.equals(player)) {\n                    executeMove(pick, playerDatamon, enemyDatamon);\n                    checkIfDead();\n                    if (checkIfWin()) return;\n\n                    switchUser(); // Switch to NPC after player move\n\n                    // Execute NPC move\n                    int npcMove = random.nextInt(1, 5); // Assuming 4 moves, inclusive\n                    executeMove(npcMove, enemyDatamon, playerDatamon);\n                    checkIfDead();\n                    checkIfWin();\n\n                    switchUser(); // Switch back to player\n                }\n            }\n        }\n    }\n\n    public Datamon getPlayerDatamon(){\n        return playerDatamon;\n    }\n\n\n\n\n\n\n\n    // Method is called on buttons. Fight() checks winner and prompts if winner is found, checks dead datamon\n    // Prompting if winner is found through method calls.\n    // Finally calls Moves from button if player turn or from random number on AI turn.\n\n        /*\n    // Picks datamon from list.\n    private void chooseMon(int x) {\n        int pick;\n\n        if (player Mon = dead){\n            for (int i = 0 : i <= player.getDatamons().size(): i++) {\n                System.out.println(\"Option \" + player.getDatamons().get(i));\n            }\n\n            switch (x) {\n                case 1:\n                    enemyDatamon = currentPlayer.setCurrentDatamon(x)\n                    break;\n\n                case 2:\n                    enemyDatamon = currentPlayer.setCurrentDatamon(x)\n                    break;\n\n                case 3:\n                    enemyDatamon = currentPlayer.setCurrentDatamon(x)\n                    break;\n            }\n            //TODO: Add måde at vælge på.\n            //Generer buttons ud fra list.size() med navne på objekter.\n        }\n    }\n\n         */\n\n\n\n\n    // Swaps user on round end.\n    private void switchUser() {\n        if (currentPlayer.equals(player)) {\n            currentPlayer = enemyPlayer;\n            enemyPlayer = player;\n        } else {\n            currentPlayer = player;\n            enemyPlayer = NPC;\n        }\n    }\n\n    private void showErrorDialog(String title, String content) {\n        Alert alert = new Alert(Alert.AlertType.ERROR);\n        alert.setTitle(title);\n        alert.setHeaderText(null);\n        alert.setContentText(content);\n        alert.showAndWait();\n    }\n\n\n\n    private void executeMove(int moveNumber, Datamon attacker, Datamon defender) {\n        switch (moveNumber) {\n            case 1:\n                move1(attacker, defender);\n                break;\n            case 2:\n                move2(attacker, defender);\n                break;\n            case 3:\n                move3(attacker, defender);\n                break;\n            case 4:\n                move4(attacker, defender);\n                break;\n            default:\n                System.out.println(\"Invalid move.\");\n        }\n    }\n\n\n    // Current datamon's move 1 to 4.\n    public void move1(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move1(defender));\n\n    }\n    public void move2(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move2(defender));\n\n    }\n\n    public void move3(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move3(defender));\n    }\n    public void move4(Datamon attacker, Datamon defender) {\n        defender.setHP(defender.getHP() - attacker.move4(defender));\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/ice/BattleSim.java b/src/main/java/com/example/ice/BattleSim.java
--- a/src/main/java/com/example/ice/BattleSim.java	
+++ b/src/main/java/com/example/ice/BattleSim.java	
@@ -40,19 +40,33 @@
 
     // Checks if Datamon is dead.
     private void checkIfDead() {
+        // Check and remove dead enemy Datamon
         if (enemyDatamon.getHP() <= 0) {
+            System.out.println("Removing dead enemy Datamon: " + enemyDatamon);
             enemyPlayer.removeDatamon(enemyDatamon);
-            if (!enemyPlayer.getDatamons().isEmpty() ) {
+            if (!enemyPlayer.getDatamons().isEmpty()) {
                 enemyDatamon = enemyPlayer.getDatamons().get(0);
+                System.out.println("Next enemy Datamon: " + enemyDatamon);
+            } else {
+                enemyDatamon = null;
+                System.out.println("Enemy has no more Datamons");
             }
+        }
 
-        }else if(playerDatamon.getHP() <= 0){
+        // Check and remove dead player Datamon
+        if (playerDatamon.getHP() <= 0) {
+            System.out.println("Removing dead player Datamon: " + playerDatamon);
             currentPlayer.removeDatamon(playerDatamon);
-            if(!currentPlayer.getDatamons().isEmpty()){
+            if (!currentPlayer.getDatamons().isEmpty()) {
                 playerDatamon = currentPlayer.getDatamons().get(0);
+                System.out.println("Next player Datamon: " + playerDatamon);
+            } else {
+                playerDatamon = null;
+                System.out.println("Player has no more Datamons");
             }
         }
     }
+
 
     // Checks winner by parsing NPC and Player Datamon ArrayLists.
     private Boolean checkIfWin() {
@@ -111,11 +125,6 @@
     }
 
 
-
-
-
-
-
     // Method is called on buttons. Fight() checks winner and prompts if winner is found, checks dead datamon
     // Prompting if winner is found through method calls.
     // Finally calls Moves from button if player turn or from random number on AI turn.
